name: cmake-build
on:
  workflow_dispatch:
  push:
    branches:
    - main
  pull_request:

jobs:
  linux-build:
    strategy:
      matrix:
        shared: [shared, static]
        config: [Debug, Release]
        profile: [gcc, clang]

    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: install conan and config
        run: |
          pip install conan --upgrade

      - name: Set environment variables
        run: |
          PRESET=${{ runner.os }}-${{ matrix.profile }}-${{ matrix.config }}
          SHARED=$([[ "${{ matrix.shared }}" == "shared" ]] && echo "True" || echo "False")
          echo "PRESET=$(echo ${PRESET} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "BUILD_SHARED=${SHARED}" >> $GITHUB_ENV

      - name: Create conan cache keys
        run: |
          CONAN_ARGS="
            --profile .github/workflows/conan/profiles/${{ matrix.profile }} \
            -s build_type=${{ matrix.config }} \
            -o shared=${BUILD_SHARED} \
            --build missing
          "
          conan lock create conanfile.py ${CONAN_ARGS} --lockfile-out conan.lock

      - name: Get conan cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.conan/data
            !~/.conan/data/**/conan_sources.tgz
          key: conan-${{ hashFiles('conan.lock') }}

      - name: Install dependencies with conan
        run: |
          conan install . \
            --install-folder build/${PRESET} \
            --lockfile conan.lock \
            --build missing

      - name: configure with cmake
        run: |
          cmake --preset ${PRESET}

      - name: build with cmake
        run: |
          cd build/${PRESET}
          cmake --build .

      - name: Run tests
        run: |
          cd build/${PRESET}
          ctest --extra-verbose --no-tests=error
