{
  "version": 3,
  "configurePresets": [
    {
      "name": "default-base",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/${presetName}",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/build/${presetName}/generators/conan_toolchain.cmake"
      }
    },
    {
      "name": "linux-clang",
      "inherits": "default-base",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang++"
      },
      "hidden": true,
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      }
    },
    {
      "name": "linux-gcc",
      "inherits": "default-base",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "gcc",
        "CMAKE_CXX_COMPILER": "g++"
      },
      "hidden": true,
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      }
    },
    {
      "name": "release-base",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      }
    },
    {
      "name": "debug-base",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "linux-clang-release",
      "displayName": "Linux Clang Release",
      "description": "Release build using Clang and LLVM libc++",
      "inherits": [ "linux-clang", "release-base" ]
    },
    {
      "name": "linux-clang-debug",
      "displayName": "Linux Clang Debug",
      "description": "Debug build using Clang and LLVM libc++",
      "inherits": [ "linux-clang", "debug-base" ]
    },
    {
      "name": "linux-gcc-release",
      "displayName": "Linux GCC Release",
      "description": "Release build using GCC and libstdc++",
      "inherits": [ "linux-gcc", "release-base" ]
    },
    {
      "name": "linux-gcc-debug",
      "displayName": "Linux GCC Debug",
      "description": "Debug build using GCC and libstdc++",
      "inherits": [ "linux-gcc", "debug-base" ]
    }
  ]
}
